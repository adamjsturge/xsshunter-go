name: Playwright Tests
on:
  push:
    branches: [ main, dev ]
    paths:
      - "Dockerfile"
      - "docker-compose.yml"
      - "go.mod"
      - "go.sum"
      - "probe.js"
      - "src/*"
      - "*.go"
      - "e2e/*"
      - ".github/workflows/playwright.yml"
  pull_request:
    branches: [ main, dev ]
    paths:
      - "Dockerfile"
      - "docker-compose.yml"
      - "go.mod"
      - "go.sum"
      - "probe.js"
      - "src/*"
      - "*.go"
      - "e2e/*"
      - ".github/workflows/playwright.yml"
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
    - name: Change directory and install dependencies
      run: npm ci
      working-directory: e2e
    - name: Install Playwright Browsers
      run:  npx playwright install --with-deps
      working-directory: e2e
    - name: Install Playwright Test
      run: npm install @playwright/test
      working-directory: e2e
    - uses: actions/checkout@v2
    - name: Create .env
      run: echo "CONTROL_PANEL_ENABLED=true\nDOMAIN=http://localhost:1449" > .env
    - name: Test the Docker image
      run: docker compose up -d
    - name: LS the directory
      run: ls
    - name: LS the e2e
      run: ls e2e
    - name: Copy Node Modules
      run: cp -r ./e2e/node_modules ./node_modules
    - name: Get Docker logs
      id: logs
      run: |
        sleep 50
        LOGS=$(docker logs xsshunter-go-xsshunter-go-1)
        PASSWORD=$(echo "$LOGS" | grep -oP 'PASSWORD: \K.*')
        echo "::set-output name=password::$PASSWORD"
    - name: Run Playwright tests
      env:
        INITIAL_PASSWORD: ${{ steps.logs.outputs.password }}
      run: npx playwright test
      working-directory: e2e
    - uses: actions/upload-artifact@v4
      if: always()